{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerie\\\\OneDrive\\\\Documents\\\\GitHub\\\\CVWO\\\\gym-forum\\\\src\\\\components\\\\AddPostForm.tsx\",\n  _s = $RefreshSig$();\n// src/components/AddPostForm.tsx\nimport React, { useState } from 'react';\nimport { createPost } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPostForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [userId, setUserId] = useState(1); // Assuming user with ID 1 for now\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await createPost(title, body, userId);\n    setTitle('');\n    setBody('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AddPostForm, \"C5KEJsInLvQcGrFsiOUNgqE9esQ=\");\n_c = AddPostForm;\nexport default AddPostForm;\nvar _c;\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","createPost","jsxDEV","_jsxDEV","AddPostForm","_s","title","setTitle","body","setBody","userId","setUserId","handleSubmit","e","preventDefault","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/jerie/OneDrive/Documents/GitHub/CVWO/gym-forum/src/components/AddPostForm.tsx"],"sourcesContent":["// src/components/AddPostForm.tsx\nimport React, { useState } from 'react';\nimport { createPost } from '../services/apiService';\n\nconst AddPostForm: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [userId, setUserId] = useState(1); // Assuming user with ID 1 for now\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    await createPost(title, body, userId);\n    setTitle('');\n    setBody('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Title:</label>\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n      </div>\n      <div>\n        <label>Body:</label>\n        <textarea value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n      </div>\n      <button type=\"submit\">Add Post</button>\n    </form>\n  );\n};\n\nexport default AddPostForm;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEzC,MAAMY,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMb,UAAU,CAACK,KAAK,EAAEE,IAAI,EAAEE,MAAM,CAAC;IACrCH,QAAQ,CAAC,EAAE,CAAC;IACZE,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEN,OAAA;IAAMY,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrBjB,OAAA;QAAOkB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEhB,KAAM;QAACiB,QAAQ,EAAGV,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACW,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eACNjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBjB,OAAA;QAAUmB,KAAK,EAAEd,IAAK;QAACe,QAAQ,EAAGV,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACW,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACNjB,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACf,EAAA,CAzBID,WAAqB;AAAAqB,EAAA,GAArBrB,WAAqB;AA2B3B,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}